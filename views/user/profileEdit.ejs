<!-- 회원정보 수정 ejs -->
<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>회원정보 수정</title>
        <link rel="stylesheet" href="/static/css/profileEdit.css" />
        <%-include('../include/head')%>
    </head>
    <body>
        <%-include('../include/header')%>
        <div class="container-edit">
            <div class="img_profileEdit">
                <img
                    src="/static/image/profileEdit_img.png"
                    alt="profileEdit_img"
                    id="img_profileEdit"
                />
            </div>
            <div class="profileEditWallPaper">
                <form name="profileEditForm" id="profileEditForm">
                    <h1>회원정보 수정</h1>
                    <p>비밀번호, 닉네임만 수정 가능</p>
                    <div class="container">
                        <label for="email"><span> 이메일</span></label>
                        <br />
                        <input
                            type="email"
                            id="email"
                            name="email"
                            class="input"
                            value="<%= data.email %>"
                            readonly
                        />
                        <br />
                        <label for="userId"><span> 아이디</span></label>
                        <br />
                        <input
                            type="text"
                            id="id"
                            name="id"
                            class="input"
                            value="<%= data.id %>"
                            readonly
                        />
                        <br />
                        <label for="userPw"><span> 비밀번호 변경</span></label>
                        <br />
                        <input type="password" id="userPw" name="userPw" class="input" required />
                        <br />
                        <label for="userPwConfirm"><span>비밀번호 변경 확인</span></label>
                        <br />
                        <input
                            type="password"
                            id="userPwConfirm"
                            name="userPwConfirm"
                            class="input"
                            required
                        />
                        <br />
                        <label for="name"><span> 이름</span></label>
                        <br />
                        <input
                            type="text"
                            id="name"
                            name="name"
                            class="input"
                            value="<%= data.name %>"
                            readonly
                        />
                        <br />
                        <label for="nickname"><span> 닉네임</span></label>
                        <br />
                        <input
                            type="text"
                            id="nickname"
                            name="nickname"
                            class="input"
                            value="<%= data.nickname %>"
                            required
                        />
                        <button
                            type="button"
                            class="btn_check"
                            onclick="checkDuplicate('nickname')"
                        >
                            중복 확인
                        </button>
                        <br /><br />
                        <button type="button" onclick="profileEdit()" id="btn_profileEdit">
                            수정하기
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </body>
    <script>
        (async () => {
            const accessToken = localStorage.getItem("accessToken");
            if (!accessToken) {
                window.location.href = "/users/signin";
            } else {
                const response = await axios({
                    method: "POST",
                    url: "/users/accesstoken",
                    headers: {
                        Authorization: `Bearer ${accessToken}`,
                    },
                });
                if (response.data.id != "<%= data.id %>") {
                    // 로그인된 사용자가 url로 타인의 프로필 페이지에 접근한 경우
                    window.location.href = "/";
                }
            }
        })();

        const duplicateCheckStatus = {
            nickname: false,
        };

        let initialNickname = "<%= data.nickname %>"; // 현재 사용 중인 닉네임의 초기값을 저장

        function profileEdit() {
            const form = document.forms["profileEditForm"];
            const p1 = document.getElementById("userPw").value;
            const p2 = document.getElementById("userPwConfirm").value;
            const currentNickname = form.nickname.value; // 현재 입력된 닉네임 값을 정의

            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            // 닉네임이 변경되었는지 확인하고, 변경되지 않았다면 중복 확인 절차를 건너뜁니다.
            if (currentNickname !== initialNickname && !duplicateCheckStatus.nickname) {
                alert("닉네임의 중복 확인을 완료해주세요.");
                return;
            }

            if (p1 !== p2) {
                alert("비밀번호가 일치하지 않습니다.");
                return;
            }
            axios({
                method: "PATCH",
                url: "/users/profile",
                data: {
                    email: form.email.value,
                    id: form.id.value,
                    pw: form.userPw.value,
                    name: form.name.value,
                    nickname: form.nickname.value,
                },
            })
                .then((res) => {
                    if (res.data.errors) {
                        for (i = 0; i < res.data.errors.length; i++) {
                            console.log(res.data.errors[i].msg);
                            alert(res.data.errors[i].msg);
                        }
                    } else {
                        alert("회원정보 수정 완료");
                        document.location.href = "/users/mypage/<%= data.id %>";
                    }
                })
                .catch((error) => {
                    console.error("회원정보 수정 에러", error);
                    alert("회원정보 수정 중 오류가 발생했습니다. 나중에 다시 시도해주세요.");
                });
        }

        function checkDuplicate(field) {
            const value = document.getElementById(field).value;
            if (!value) {
                alert("값을 입력해주세요.");
                return;
            }

            axios
                .post("/users/check-duplicate", { field, value })
                .then((response) => {
                    if (response.data) {
                        alert("사용 가능합니다.");
                        duplicateCheckStatus[field] = true;
                    } else {
                        alert("이미 사용 중입니다.");
                        duplicateCheckStatus[field] = false;
                    }
                })
                .catch((error) => {
                    console.error(error);
                    alert("서버 오류가 발생했습니다.");
                });
        }
    </script>
</html>
